Philosopher's Stone+
	
	Overview
	
		-
			The Philosopher's Stone+ differs slightly from the generic Philosopher's Stone in that
			it has more features added in for convenience.
		-
	
	Additional Member Variables
	
		Tags
			
			-
				This variable stores a list of strings used for identifying the Philosopher's Stone
				containing it.
				
				Tags disregard non-alphanumeric characters and letter case.
			-
			
			Type: List { Type: String }
					
	Additional or Modified Non-Overridable Functions
		
		Non Overridable Public Functions
			
			Tag
				
				-
					This function adds a tag to the Philosopher's Stone, if the tag is not already
					present.
				-
				
				Parameters
					
					Tag { Type: Tag { Type: String } }
				
				Returns
					
					Void
			
			Remove Tag
				
				-
					This function removes a tag from the Philosopher's Stone.
				-
				
				Parameters
					
					Tag { Type: Tag { Type: String } }
				
				Returns
					
					Void
			
			Get Tags
				
				-
					This function returns the tags of the Philosopher's Stone.
				-
				
				Parameters
					
					Void
				
				Returns
					
					Tags { Type: Type: List { Type: String } }
			
			Is Tagged
				
				-
					This function returns true if the Philosopher's Stone has a given tag, and
					false otherwise.
				-
				
				Parameters
					
					Void
				
				Returns
					
					Tagged { Type: Boolean }
				
			Publicly Connect Mutually
				
				-
					This function connects the passed in Philosopher's Stone to the one it was
					called on, and makes the connection public. The connection is bi-directional.
				-
				
				Parameters
					
					Stone { Type: Philosopher's Stone Reference }
				
				Returns
					
					Void
				
			Privately Connect Mutually
				
				-
					This function connects the passed in Philosopher's Stone to the one it was
					called on, and makes the connection private. The connection is bi-directional.
				-
				
				Parameters
					
					Stone { Type: Philosopher's Stone Reference }
				
				Returns
					
					Void
				
			Disconnect Mutually
				
				-
					This function disconnects two Philosopher's Stones from each other if the two
					are connected.
				-
				
				Parameters
					
					Stone { Type: Philosopher's Stone Reference }
				
				Returns
					
					Void
			
			Destroy
				
				-
					This function mutually disconnects all Philosopher's Stones from the
					Philosopher's Stone it was called on and removes the Philosopher's Stone it was
					called on from the system.
				-
				
				Parameters
					
					Void
				
				Returns
					
					Void
			
			Get Philosopher's Stones
				
				-
					This returns a list of all Philosopher's Stones in the system.
				-
				
				Parameters
					
					Stone { Type: Philosopher's Stone Reference }
				
				Returns
					
					Stones { Type: List { Type: Philosopher's Stone Reference } }
			
			Get Connections
				
				-
					This function returns a list of references to all of the Philosopher's Stones
					connected to the Philopher's Stone it was called on.
				-
				
				Parameters
					
					Void
				
				Returns
					
					Connections { Type: List { Type: Philosopher's Stone } }
				
			Is Connected
				
				-
					This function returns true if the Philosopher's Stone it is called on is
					connected to another Philosopher's Stone, and false otherwise.
				-
				
				Parameters
					
					Connection { Type: Philosopher's Stone Reference }
				
				Returns
					
					Connected { Type: Boolean }
				
			Is Publicly Connected
				
				-
					This function returns true if the Philosopher's Stone it is called on is
					publicly connected to another Philosopher's Stone, and false otherwise.
				-
				
				Parameters
					
					Connection { Type: Philosopher's Stone Reference }
				
				Returns
					
					Connected { Type: Boolean }
				
			Is Privately Connected
				
				-
					This function returns true if the Philosopher's Stone it is called on is
					privately connected to another Philosopher's Stone, and false otherwise.
				-
				
				Parameters
					
					Connection { Type: Philosopher's Stone Reference }
				
				Returns
					
					Connected { Type: Boolean }
			
			Get
				
				-
					This function traverses the Philosopher's Atlas and returns all Philosopher's
					Stones that are tagged with all of the tags passed in.
				-
				
				Parameters
					
					Tags { Type: List { Type: String } }
				
				Returns
					
					Philosopher's Stones { Type: List { Type: Philosopher's Stone } }
			
			Super Get
				
				-
					This function traverses all Philosopher's Stones in the system and returns all
					Philosopher's Stones that are tagged with all of the tags passed in.
				-
				
				Parameters
					
					Tags { Type: List { Type: String } }
				
				Returns
					
					Philosopher's Stones { Type: List { Type: Philosopher's Stone } }
			
			Get Atlas
				
				-
					This function traverses the Philosopher's Atlas and return all Philosopher's
					Stones that it passed through.
				-
				
				Parameters
					
					Void
				
				Returns
					
					Philosopher's Stones { Type: List { Type: Philosopher's Stone } }
			
			Has
				
				-
					This function traverses the Philosopher's Atlas and returns whether or not the
					Atlas contains Philosopher's Stones that are tagged with all of the tags
					passed in.
				-
				
				Parameters
					
					Tags { Type: List { Type: String } }
				
				Returns
					
					Found { Type: Boolean }
			
			Super Has
				
				-
					This function traverses all Philosopher's Stones in the system and returns
					whether or not the system contains Philosopher's Stones that are tagged with
					all of the tags passed in.
				-
				
				Parameters
					
					Tags { Type: List { Type: String } }
				
				Returns
					
					Found { Type: Boolean }
			
			Call
				
				-
					This function traverses the Philosopher's Atlas and returns a list of all the
					objects returned by each Philosopher's Stone's On Call function.
				-
				
				Parameters
					
					Packet { Type: List { Type: Generic Object } }
				
				Returns
					
					Data { Type: List { Type: Generic Object } }
			
			Super Call
				
				-
					This function traverses the all Philosopher's Stones in the system and returns
					a list of all the objects returned by each Philosopher's Stone's On Call function.
				-
				
				Parameters
					
					Packet { Type: List { Type: Generic Object } }
				
				Returns
					
					Data { Type: List { Type: Generic Object } }
		
		Modified Overridable Public Functions
			
			On Call
				
				-
					This function returns a single object based on a packet of objects passed in.
				-
				
				Parameters
					
					Packet { Type: List { Type: Generic Object } }
				
				Returns
					
					Data { Type: Generic Object }